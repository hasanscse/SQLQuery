
ALTER PROC [dbo].[RSP_PRODUCT_LEDGER]
@COMPANY_ID NVARCHAR(10),
@PRODUCT_CODE NVARCHAR(30),
@DATE_FROM DATETIME,
@DATE_TO DATETIME,
@BRANCH_ID NVARCHAR(10)
AS

DECLARE @PRODUCT_NAME NVARCHAR(50)
DECLARE @PRODUCT_DESCRIPTION NVARCHAR(150)
DECLARE @UNIT_NAME NVARCHAR(50)

set nocount on

SELECT @PRODUCT_NAME=P.PRODUCT_NAME, @PRODUCT_DESCRIPTION=P.PRODUCT_DESCRIPTION,
 --@UNIT_NAME= U.@UNIT_NAME
 
 @UNIT_NAME=P.STOCK_QUANTITY 
 
FROM   PRODUCT P INNER JOIN
       PRODUCT_UNIT_TYPES U ON P.UNIT_ID = U.UNIT_ID AND P.COMPANY_ID=U.COMPANY_ID
WHERE PRODUCT_CODE=@PRODUCT_CODE AND P.COMPANY_ID=@COMPANY_ID

SELECT PRODUCT_CODE,TYPE_P,DEBIT,CREDIT,LEDGER_CREDIT,LEDGER_DEBIT,PARTICULAR,MAKE_DT,
COMPANY_NAME,ADDRESS, 
'Phone : '+C.Phone +' '+'Fax : '+C.Fax+' '+'E-Mail : '+ C.Email ADDRESS2,
@PRODUCT_NAME PRODUCT_NAME,@PRODUCT_DESCRIPTION PRODUCT_DESCRIPTION,@UNIT_NAME UNIT_NAME,
@DATE_FROM DATE_FROM,
@DATE_TO DATE_TO,
0 NEW_AMOUNT,0 NEW_QUANTITY
FROM
(
SELECT PRODUCT_CODE,OPENING_STOCK_QUANTITY DEBIT,0 CREDIT, OPENING_STOCK_AMOUNT LEDGER_DEBIT,
0 LEDGER_CREDIT
,'' PARTICULAR,OPENING_DATE MAKE_DT
,'Openinig' TYPE_P,COMPANY_ID
FROM   PRODUCT WHERE PRODUCT_CODE=@PRODUCT_CODE AND COMPANY_ID=@COMPANY_ID
and BRANCH_ID=@BRANCH_ID

-----------------------------
UNION
SELECT PD.PRODUCT_CODE, PD.QUANTITY DEBIT,0 CREDIT, PD.TOTAL_PURCHASED_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
       PD.PURCHASE_INVOICE_NO PARTICULAR, P.MAKE_DT,'Purchase' TYPE_P,P.COMPANY_ID
FROM   PURCHASE P INNER JOIN PURCHASE_DETAILS PD 
       ON P.PURCHASE_INVOICE_NO = PD.PURCHASE_INVOICE_NO AND P.COMPANY_ID=PD.COMPANY_ID
WHERE P.CANCEL_FLAG=0 AND P.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and P.BRANCH_ID=@BRANCH_ID
---------------------------------
UNION
SELECT PD.PRODUCT_CODE, PD.QUANTITY DEBIT,0 CREDIT, PD.TOTAL_PURCHASED_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
       PD.STOCK_IN_INVOICE_NO PARTICULAR, P.MAKE_DT,'Stock Found' TYPE_P,P.COMPANY_ID
FROM   STOCK_IN P INNER JOIN STOCK_IN_DETAILS PD 
       ON P.STOCK_IN_INVOICE_NO = PD.STOCK_IN_INVOICE_NO AND P.COMPANY_ID=PD.COMPANY_ID
WHERE P.CANCEL_FLAG=0 AND P.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and P.BRANCH_ID=@BRANCH_ID

------------------------

--UNION
--SELECT PRD.PRODUCT_CODE, 0 DEBIT,PRD.QUANTITY_RETURN CREDIT, 0  LEDGER_DEBIT, PR.TOTAL_RETURN_AMOUNT LEDGER_CREDIT,
--       PRD.PURCHASE_INVOICE_NO PARTICULAR, PR.MAKE_DT,'Purchase Return' TYPE_P,PR.COMPANY_ID
--FROM   PURCHASE_RETURN PR INNER JOIN PURCHASE_RETURN_DETAILS PRD 
--       ON PR.PURCHASE_INVOICE_NO = PRD.PURCHASE_INVOICE_NO AND PR.COMPANY_ID=PRD.COMPANY_ID
--WHERE PR.CANCEL_FLAG=0 AND PR.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
--and PR.BRANCH_ID=@BRANCH_ID

------------------------


UNION
SELECT ST1.PRODUCT_CODE, ST1.QUANTITY DEBIT,0 CREDIT, ST1.TOTAL_TRANSFER_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
       ST1.STOCK_TRANSFER_INVOICE_NO PARTICULAR, SD1.MAKE_DT,'Receive' TYPE_P,SD1.COMPANY_ID
FROM   STOCK_TRANSFER SD1 INNER JOIN STOCK_TRANSFER_DETAILS ST1 
       ON SD1.STOCK_TRANSFER_INVOICE_NO = ST1.STOCK_TRANSFER_INVOICE_NO AND SD1.COMPANY_ID=ST1.COMPANY_ID
WHERE SD1.RECEIVE_FLAG=1 AND SD1.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and SD1.BRANCH_ID_REMOTE=@BRANCH_ID

----------------------------
UNION      
SELECT SD.PRODUCT_CODE,0 DEBIT, SD.QUANTITY CREDIT,0 LEDGER_DEBIT, (SD.QUANTITY *SD.PURCHASE_PRICE) LEDGER_CREDIT
, SD.SALES_INVOICE_NO PARTICULAR, S.MAKE_DT
			,'Sales' TYPE_P,S.COMPANY_ID
FROM   SALES_DETAILS SD INNER JOIN SALES S 
	   ON SD.SALES_INVOICE_NO = S.SALES_INVOICE_NO AND SD.COMPANY_ID=S.COMPANY_ID
	   and sd.BRANCH_ID=s.BRANCH_ID
WHERE S.CANCEL_FLAG=0 AND S.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and s.BRANCH_ID=@BRANCH_ID and sd.QUANTITY >0

----------------------------
UNION      
SELECT SD.PRODUCT_CODE,0 DEBIT, SD.QUANTITY CREDIT,0 LEDGER_DEBIT, (SD.QUANTITY *SD.STOCK_OUT_PRICE) LEDGER_CREDIT
, SD.STOCK_OUT_INVOICE_NO PARTICULAR, S.MAKE_DT
			,'Stock Out/Lost' TYPE_P,S.COMPANY_ID
FROM   STOCK_OUT_DETAILS SD INNER JOIN STOCK_OUT S 
	   ON SD.STOCK_OUT_INVOICE_NO = S.STOCK_OUT_INVOICE_NO AND SD.COMPANY_ID=S.COMPANY_ID
	   and sd.BRANCH_ID=s.BRANCH_ID
WHERE S.CANCEL_FLAG=0 AND S.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and s.BRANCH_ID=@BRANCH_ID
-----------------------------
UNION      
SELECT SD.PRODUCT_CODE,0 DEBIT, SD.QUANTITY CREDIT,0 LEDGER_DEBIT, (SD.QUANTITY *SD.PURCHASE_PRICE) LEDGER_CREDIT
, SD.STOCK_TO_BADSTOCK_INVOICE_NO PARTICULAR, S.MAKE_DT
			,'Damage/Bad Stock' TYPE_P,S.COMPANY_ID
FROM   STOCK_TO_BADSTOCK_DETAILS SD INNER JOIN STOCK_TO_BADSTOCK S 
	   ON SD.STOCK_TO_BADSTOCK_INVOICE_NO = S.STOCK_TO_BADSTOCK_INVOICE_NO AND SD.COMPANY_ID=S.COMPANY_ID
	   and sd.BRANCH_ID=s.BRANCH_ID
WHERE S.CANCEL_FLAG=0 AND S.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and s.BRANCH_ID=@BRANCH_ID

-----------------------------
UNION
SELECT PD.PRODUCT_CODE, PD.QUANTITY DEBIT,0 CREDIT, PD.TOTAL_PURCHASED_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
       PD.BADSTOCK_TO_STOCK_INVOICE_NO PARTICULAR, P.MAKE_DT,'Damage/Bad To Good Stock' TYPE_P,P.COMPANY_ID
FROM   BADSTOCK_TO_STOCK P INNER JOIN BADSTOCK_TO_STOCK_DETAILS PD 
       ON P.BADSTOCK_TO_STOCK_INVOICE_NO = PD.BADSTOCK_TO_STOCK_INVOICE_NO AND P.COMPANY_ID=PD.COMPANY_ID
WHERE P.CANCEL_FLAG=0 AND P.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and P.BRANCH_ID=@BRANCH_ID
-----------------------------------
UNION      
SELECT TD.PRODUCT_CODE,0 DEBIT, TD.QUANTITY CREDIT,0 LEDGER_DEBIT, (TD.QUANTITY *1) LEDGER_CREDIT
, TD.STOCK_TRANSFER_INVOICE_NO PARTICULAR, ST.MAKE_DT
			,'Transfer' TYPE_P,ST.COMPANY_ID
FROM   STOCK_TRANSFER_DETAILS TD INNER JOIN STOCK_TRANSFER ST 
	   ON TD.STOCK_TRANSFER_INVOICE_NO = ST.STOCK_TRANSFER_INVOICE_NO AND TD.COMPANY_ID=ST.COMPANY_ID
WHERE ST.RECEIVE_FLAG=1 AND ST.COMPANY_ID=@COMPANY_ID AND PRODUCT_CODE=@PRODUCT_CODE
and ST.BRANCH_ID=@BRANCH_ID


-------------------------

UNION      
SELECT SRD.PRODUCT_CODE, SRD.QUANTITY DEBIT,0 CREDIT, SRD.RETURN_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
 SR.SALES_INVOICE_NO PARTICULAR, SR.MAKE_DT
			,'Sales Exchange - Return' TYPE_P,SR.COMPANY_ID
FROM   SALES_RETURN_DETAILS SRD INNER JOIN SALES_RETURN SR 
	   ON SRD.SALES_INVOICE_NO = SR.SALES_INVOICE_NO AND SRD.COMPANY_ID=SR.COMPANY_ID and SRD.BRANCH_ID = SR.BRANCH_ID
	   inner join SALES s on SR.SALES_NEW_INVOICE_NO = s.SALES_INVOICE_NO
	   AND SR.COMPANY_ID=s.COMPANY_ID and SR.BRANCH_ID = s.BRANCH_ID
WHERE SR.CANCEL_FLAG=0 AND SR.COMPANY_ID=@COMPANY_ID AND SRD.PRODUCT_CODE=@PRODUCT_CODE
and SR.BRANCH_ID=@BRANCH_ID 
and SR.REMARKS = 'Exchange Product'

-------------------------

UNION      
SELECT SRD.PRODUCT_CODE, SRD.QUANTITY DEBIT,0 CREDIT, SRD.RETURN_PRICE LEDGER_DEBIT, 0 LEDGER_CREDIT,
 SR.SALES_INVOICE_NO PARTICULAR, SR.MAKE_DT
			,'Sales Return -From Buyer' TYPE_P,SR.COMPANY_ID
FROM   SALES_RETURN_DETAILS SRD INNER JOIN SALES_RETURN SR 
	   ON SRD.SALES_RETURN_NO = SR.SALES_RETURN_NO AND SRD.COMPANY_ID=SR.COMPANY_ID 
	   and SRD.BRANCH_ID = SR.BRANCH_ID
	   
WHERE SR.CANCEL_FLAG=0 AND SR.COMPANY_ID=@COMPANY_ID AND SRD.PRODUCT_CODE=@PRODUCT_CODE
and SR.BRANCH_ID=@BRANCH_ID
and SR.REMARKS = 'Sales Return'

-------------------------


)A INNER JOIN COMPANY C ON A.COMPANY_ID=C.COMPANY_ID
WHERE 
(CAST(CONVERT(varchar,MAKE_DT, 106) AS datetime) BETWEEN 
(CAST(CONVERT(varchar,@DATE_FROM, 106) AS datetime)) AND 
(CAST(CONVERT(varchar,@DATE_TO, 106) AS datetime))) 
ORDER BY MAKE_DT 