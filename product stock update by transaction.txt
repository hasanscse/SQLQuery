

update PRODUCT
set STOCK_QUANTITY = aa.CURRENT_STOCK_QUANTITY+aa.OPENING_STOCK_QUANTITY



 
--select
--aa.PRODUCT_CODE,
----(aa.CURRENT_STOCK_QUANTITY+aa.OPENING_STOCK_QUANTITY) 




--(aa.CURRENT_STOCK_QUANTITY+aa.OPENING_STOCK_QUANTITY) END_STOCK_QTY
from
 -- aa start
(

select 
a.PRODUCT_NAME,a.PRODUCT_CODE,ISNULL(a.TOTAL_PURCHASE_QTY,0) TOTAL_PURCHASE_QTY,a.OPENING_STOCK_QUANTITY,
TOTAL_SALES_QTY,TOTAL_SALES_EX_QTY,
-- main stock calculation
(ISNULL(a.TOTAL_PURCHASE_QTY,0)-ISNULL(b.TOTAL_SALES_QTY,0)
+ISNULL(TOTAL_SALES_RETURN_QTY,0)+ISNULL(TOTAL_SALES_EX_QTY,0)
-ISNULL(TOTAL_STOCK_OUT_QTY,0)) 
CURRENT_STOCK_QUANTITY,

c.TOTAL_SALES_RETURN_QTY,
d.TOTAL_STOCK_OUT_QTY,a.TOTAL_PURCHASED_PRICE,b.TOTAL_SALES_PRICE,
a.STOCK_QUANTITY
from

(
-- product table
select
p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY,p.OPENING_STOCK_QUANTITY,RAW_MATERIALS_STATUS,BUYER_SUPPLIER_ID ,p.COMPANY_ID,p.BRANCH_ID,c.CATEGORY_ID,B.BRAND_ID,S.SUBCATEGORY_ID,
SUM(TOTAL_PURCHASE_QTY)TOTAL_PURCHASE_QTY,ISNULL(SUM(TOTAL_PURCHASED_PRICE),0)TOTAL_PURCHASED_PRICE

from
PRODUCT p
INNER JOIN
                      PRODUCT_CATEGORY C ON P.CATEGORY_ID = C.CATEGORY_ID 
                      and P.COMPANY_ID=C.COMPANY_ID
                      INNER JOIN
                      PRODUCT_SUBCATEGORY S ON P.SUBCATEGORY_ID = S.SUBCATEGORY_ID 
                      and  P.COMPANY_ID=S.COMPANY_ID
                      INNER JOIN
                      PRODUCT_BRAND B ON P.BRAND_ID = B.BRAND_ID
                      and P.COMPANY_ID=B.COMPANY_ID

						INNER JOIN COMPANY co
ON P.COMPANY_ID=co.COMPANY_ID

inner join BRANCH br on p.BRANCH_ID=br.BRANCH_ID and P.COMPANY_ID=br.COMPANY_ID

inner join PRODUCT_UNIT_TYPES u 
on p.UNIT_ID=u.UNIT_ID
 and  P.COMPANY_ID=u.COMPANY_ID
 
 -- purchase table
 
left outer join 
(select pd.PRODUCT_CODE,SUM(ISNULL(pd.QUANTITY,0)) as TOTAL_PURCHASE_QTY,SUM(TOTAL_PURCHASED_PRICE)TOTAL_PURCHASED_PRICE
 from PURCHASE pu
inner join PURCHASE_DETAILS pd
on  pu.PURCHASE_INVOICE_NO=pd.PURCHASE_INVOICE_NO
where 
--(CAST(CONVERT(varchar,pu.MAKE_DT, 106) AS datetime) BETWEEN 
--(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
--(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND
pu.CANCEL_FLAG=0 and pu.COMPANY_ID=1 and pd.BRANCH_ID=1
group by pd.PRODUCT_CODE
)pur
on p.PRODUCT_CODE=pur.PRODUCT_CODE 
group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY,p.OPENING_STOCK_QUANTITY,RAW_MATERIALS_STATUS,BUYER_SUPPLIER_ID,p.COMPANY_ID,p.BRANCH_ID,c.CATEGORY_ID,s.SUBCATEGORY_ID,b.BRAND_ID 

)a

-- sales table 
inner join

(
select 
p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY ,
ISNULL(SUM(sale.SALES_QUANTITY),0)TOTAL_SALES_QTY,
ISNULL(SUM(TOTAL_SALES_PRICE),0)TOTAL_SALES_PRICE
from
PRODUCT p
left outer join 
(
select su.SALES_INVOICE_NO,sd.PRODUCT_CODE,ISNULL(sd.QUANTITY,0) 
as SALES_QUANTITY,(sd.QUANTITY*sd.SALES_PRICE)TOTAL_SALES_PRICE 
from SALES su
inner join SALES_DETAILS sd
on  su.SALES_INVOICE_NO=sd.SALES_INVOICE_NO and su.COMPANY_ID=sd.COMPANY_ID and su.BRANCH_ID=sd.BRANCH_ID
where 
 --(CAST(CONVERT(varchar,su.MAKE_DT, 106) AS datetime) BETWEEN 
--(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
--(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND

su.CANCEL_FLAG=0 and su.COMPANY_ID=1 and sd.BRANCH_ID=1 
-- stock history update
and sd.QUANTITY >0

)sale
on p.PRODUCT_CODE=sale.PRODUCT_CODE

group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY
)b


on a.PRODUCT_CODE=b.PRODUCT_CODE

-- sales return table
inner join
(
select 
p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY ,
ISNULL(SUM(sale.SALES_RETURN_QUANTITY),0)TOTAL_SALES_RETURN_QTY,
ISNULL(SUM(TOTAL_SALES_RETURN_PRICE),0)TOTAL_SALES_RETURN_PRICE
from
PRODUCT p
left outer join 
(
select su.SALES_RETURN_NO,sd.PRODUCT_CODE,ISNULL(sd.QUANTITY,0) as 
SALES_RETURN_QUANTITY,(sd.QUANTITY*sd.SALES_PRICE)TOTAL_SALES_RETURN_PRICE 
from SALES_RETURN su
inner join SALES_RETURN_DETAILS sd
on  su.SALES_RETURN_NO=sd.SALES_RETURN_NO and su.COMPANY_ID=sd.COMPANY_ID and su.BRANCH_ID=sd.BRANCH_ID
where 
 --(CAST(CONVERT(varchar,su.MAKE_DT, 106) AS datetime) BETWEEN 
--(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
--(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND

su.CANCEL_FLAG=0 and su.COMPANY_ID=1 and sd.BRANCH_ID=1 
and su.REMARKS = 'Sales Return'

)sale
on p.PRODUCT_CODE=sale.PRODUCT_CODE


group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY
)c

on b.PRODUCT_CODE=c.PRODUCT_CODE


-- sales exchange

inner join
(
select 
p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY ,
ISNULL(SUM(sale_excng.SALES_RETURN_QUANTITY),0)TOTAL_SALES_EX_QTY,
ISNULL(SUM(TOTAL_SALES_RETURN_PRICE),0)TOTAL_SALES_RETURN_PRICE
from
PRODUCT p
left outer join 
(
select su.SALES_RETURN_NO,sd.PRODUCT_CODE,ISNULL(sd.QUANTITY,0) as 
SALES_RETURN_QUANTITY,(sd.QUANTITY*sd.SALES_PRICE)TOTAL_SALES_RETURN_PRICE 
from SALES_RETURN su
inner join SALES_RETURN_DETAILS sd
on  su.SALES_RETURN_NO=sd.SALES_RETURN_NO and su.COMPANY_ID=sd.COMPANY_ID and su.BRANCH_ID=sd.BRANCH_ID
where 
 --(CAST(CONVERT(varchar,su.MAKE_DT, 106) AS datetime) BETWEEN 
--(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
--(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND

su.CANCEL_FLAG=0 and su.COMPANY_ID=1 and sd.BRANCH_ID=1 
and su.REMARKS = 'Exchange Product'

)sale_excng
on p.PRODUCT_CODE=sale_excng.PRODUCT_CODE


group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY
)se

on c.PRODUCT_CODE=se.PRODUCT_CODE

-- stock out table
inner join
(
select 
p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY ,
ISNULL(SUM(sale.STOCK_OUT_QUANTITY),0)TOTAL_STOCK_OUT_QTY,
ISNULL(SUM(TOTAL_STOCK_OUT_PRICE),0)TOTAL_STOCK_OUT_PRICE
from
PRODUCT p
left outer join 
(
select su.STOCK_OUT_INVOICE_NO,sd.PRODUCT_CODE,ISNULL(sd.QUANTITY,0) as STOCK_OUT_QUANTITY,(sd.QUANTITY*sd.STOCK_OUT_PRICE)TOTAL_STOCK_OUT_PRICE 
from STOCK_OUT su
inner join STOCK_OUT_DETAILS sd
on  su.STOCK_OUT_INVOICE_NO=sd.STOCK_OUT_INVOICE_NO and su.COMPANY_ID=sd.COMPANY_ID and su.BRANCH_ID=sd.BRANCH_ID
where 
 --(CAST(CONVERT(varchar,su.MAKE_DT, 106) AS datetime) BETWEEN 
--(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
--(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND

su.CANCEL_FLAG=0 and su.COMPANY_ID=1 and sd.BRANCH_ID=1 

)sale
on p.PRODUCT_CODE=sale.PRODUCT_CODE

group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY
)d

on se.PRODUCT_CODE=d.PRODUCT_CODE





---- stock damage table
--inner join
--(
--select 
--p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY ,
--ISNULL(SUM(badstock.STOCK_OUT_QUANTITY),0)TOTAL_BAD_STOCK_QTY,
--ISNULL(SUM(TOTAL_STOCK_OUT_PRICE),0)TOTAL_STOCK_OUT_PRICE
--from
--PRODUCT p
--left outer join 
--(
--select su.STOCK_TO_BADSTOCK_INVOICE_NO,sd.PRODUCT_CODE,ISNULL(sd.QUANTITY,0) as STOCK_OUT_QUANTITY,(sd.QUANTITY*sd.PURCHASE_PRICE)TOTAL_STOCK_OUT_PRICE 
--from STOCK_TO_BADSTOCK su
--inner join STOCK_TO_BADSTOCK_DETAILS sd
--on  su.STOCK_TO_BADSTOCK_INVOICE_NO=sd.STOCK_TO_BADSTOCK_INVOICE_NO 
--and su.COMPANY_ID=sd.COMPANY_ID and su.BRANCH_ID=sd.BRANCH_ID
--where 
-- --(CAST(CONVERT(varchar,su.MAKE_DT, 106) AS datetime) BETWEEN 
----(CAST(CONVERT(varchar,@FROM_DATE, 106) AS datetime)) AND 
----(CAST(CONVERT(varchar,@TO_DATE, 106) AS datetime))) AND

--su.CANCEL_FLAG=0 and su.COMPANY_ID=1 and sd.BRANCH_ID=1 

--)badstock
--on p.PRODUCT_CODE=badstock.PRODUCT_CODE

--group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY
--)e

--on d.PRODUCT_CODE=e.PRODUCT_CODE




---- -----------Stock In
--inner join
--(
--select 
--p.PRODUCT_NAME,p.PRODUCT_CODE,
--ISNULL(SUM(STOCK_IN_QUANTITY),0)TOTAL_STOCK_IN_QUANTITY,
--ISNULL(SUM(STOCK_IN_PRICE),0)TOTAL_STOCK_IN_PURCHASED_PRICE
--,p.COMPANY_ID,p.BRANCH_ID
--from
--PRODUCT p
--left outer join 
--(
--select si.STOCK_IN_INVOICE_NO,sid.PRODUCT_CODE,
--ISNULL(sid.QUANTITY,0) as STOCK_IN_QUANTITY,
--0 STOCK_IN_PRICE 
--from STOCK_IN si
--inner join STOCK_IN_DETAILS sid
--on  si.STOCK_IN_INVOICE_NO=sid.STOCK_IN_INVOICE_NO 
--and si.COMPANY_ID=sid.COMPANY_ID and si.BRANCH_ID=sid.BRANCH_ID


--)stockin
--on p.PRODUCT_CODE=stockin.PRODUCT_CODE

--group by p.PRODUCT_NAME,p.PRODUCT_CODE,p.STOCK_QUANTITY,p.COMPANY_ID,p.BRANCH_ID
--)l

--on f.PRODUCT_CODE=l.PRODUCT_CODE
--and
--f.COMPANY_ID =l.COMPANY_ID and f.BRANCH_ID=l.BRANCH_ID











)aa



where PRODUCT.PRODUCT_CODE = aa.PRODUCT_CODE




