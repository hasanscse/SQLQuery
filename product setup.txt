

ALTER proc [dbo].[FSP_PRODUCT_I]
(
 @PRODUCT_CODE varchar(50),
 @TOTAL_STOCK_AMOUNT decimal(18, 2),
 @PURCHASED_PRICE decimal(18, 2),
 @OPENING_STOCK_QUANTITY int,
 @OPENING_DATE datetime,
 @STOCK_QUANTITY decimal(18, 2),
 @MAKE_BY varchar(50),
 @PRODUCT_STATUS int,
 @WARRANTY_DAYS int, 
 @SALES_PRICE decimal(18, 2), 
 @PURCHASE_PRICE decimal(18, 2), 
 @SERIAL_AVAILABLE int, 
 @UNIT_ID int, 
 @UNIT_ID_SECONDARY INT,
 @CATEGORY_ID int, 
 @BRAND_ID int, 
 @SUBCATEGORY_ID int, 
 @PRODUCT_DESCRIPTION varchar(350),
 @PRODUCT_NAME varchar(250),
 @SALES_VAT decimal(18, 2),
 @RAW_MATERIALS_STATUS int,
 @COMPANY_ID varchar(10),
 --@BRANCH_ID varchar(10),
 @DISCOUNT DECIMAL(18,2),
 @ERROR_MESSAGE nvarchar(1000) out,
 @BUYER_SUPPLIER_ID nvarchar(30),
 @REORDER_LEVEL DECIMAL(18,3),
 @PRODUCT_IMAGE	image,
 @PRODUCT_SIZE_NAME varchar(350),
 @PRODUCT_COLOR_NAME varchar(350),
 @STYLE_CODE varchar(350),
 @DISCOUNT_STATUS int,
 @RACK_NO varchar(350),
 @TILES_SFT DECIMAL(18,2),
 @BOX_TILES DECIMAL(18,2),
 @WHOLESALES_PRICE DECIMAL(18,2) 
)
--with encryption
AS

IF @PRODUCT_CODE IS NULL or @PRODUCT_CODE=''
BEGIN

--
DECLARE @Random INT;
DECLARE @Upper INT;
DECLARE @Lower INT
 
---- This will create a random number between 1 and 999
SET @Lower = 100000 ---- The lowest random number
SET @Upper = 999999 ---- The highest random number
SELECT @Random = ROUND(((@Upper - @Lower -1) * RAND() + @Lower), 0)
SELECT @Random
--


	DECLARE @PRODUCT_CODE_COUNT int
	SET @PRODUCT_CODE_COUNT =(SELECT COUNT(PRODUCT_CODE)+1 FROM PRODUCT)

	IF(@PRODUCT_CODE_COUNT ='' OR @PRODUCT_CODE_COUNT IS NULL)
	BEGIN
		SET @PRODUCT_CODE_COUNT =1
	END
	------------------
	DECLARE @MAX_NO INT
	CREATE TABLE #tmpTable
	(
		OutputValue VARCHAR(100)
	)
	--SET @COMPANY_INITIAL=DBO.FXN_GET_COMPANY_INITIAL(1)
	INSERT INTO #tmpTable (OutputValue)	
	EXEC FSP_GET_MEX_SERIAL_NO @COMPANY_ID,'PRODUCT',5;
	--EXEC @MAX_NO= FSP_GET_MEX_SERIAL_NO @COMPANY_ID,@PREFIX,1
	SELECT
		@MAX_NO = OutputValue
	FROM 
		#tmpTable
	DROP TABLE #tmpTable
	--SET @PRODUCT_CODE= '1'+RIGHT('000000'+convert(varchar,(@PRODUCT_CODE_COUNT)),6)+DATEPART(YEAR,GETDATE())
	SET @PRODUCT_CODE= '1'+RIGHT('000000'+convert(varchar,(@Random)),6)+DATEPART(YEAR,GETDATE())
END

--------------------
DECLARE @STOP_VARIABLE INT =1
DECLARE @TOTAL_RECORD INT =0,
		@ErrorMessage		nvarchar(400), 
		@ErrorNumber		int, 
		@ErrorSeverity		int, 
		@ErrorState			int, 
		@ErrorLine			int,
		@BRANCH_ID varchar(10)
DECLARE @TEMP_BRANCH TABLE
(
	ROW_NO		INT,
	BRANCH_ID	NVARCHAR(30),
	COMPANY_ID  NVARCHAR(10)
) 

INSERT INTO @TEMP_BRANCH  
SELECT ROW_NUMBER() OVER(ORDER BY BRANCH_ID),BRANCH_ID,COMPANY_ID 
FROM BRANCH WHERE COMPANY_ID=@COMPANY_ID

--SELECT * FROM @TEMP_BRANCH
SELECT @TOTAL_RECORD=COUNT(*) FROM @TEMP_BRANCH
--PRINT('-'+@TOTAL_RECORD)
--PRINT('-'+@STOP_VARIABLE)
BEGIN TRY
	WHILE(@STOP_VARIABLE <= @TOTAL_RECORD)
	BEGIN
		SELECT @BRANCH_ID=BRANCH_ID
		FROM @TEMP_BRANCH
		WHERE ROW_NO=@STOP_VARIABLE
        --PRINT(@BRANCH_ID)
		INSERT INTO PRODUCT(		
			PRODUCT_CODE,			
			TOTAL_STOCK_AMOUNT,
			PURCHASED_PRICE,
			OPENING_STOCK_QUANTITY,
			OPENING_DATE,
			STOCK_QUANTITY, 
			MAKE_DT, 
			MAKE_BY,
			PRODUCT_STATUS,
			WARRANTY_DAYS, 
			SALES_PRICE, 
			PURCHASE_PRICE, 
			SERIAL_AVAILABLE, 
			UNIT_ID, 
			CATEGORY_ID, 
			BRAND_ID, 
			SUBCATEGORY_ID, 
			PRODUCT_DESCRIPTION,
			PRODUCT_NAME,
			SALES_VAT,
			RAW_MATERIALS_STATUS,
			COMPANY_ID,
			BRANCH_ID,
			DISCOUNT,
			UNIT_ID_SECONDARY,
			BUYER_SUPPLIER_ID,
			REORDER_LEVEL,
			PRODUCT_IMAGE,
			PRODUCT_SIZE_NAME ,
 PRODUCT_COLOR_NAME	,
 STYLE_CODE,
 DISCOUNT_STATUS,
 RACK_NO,
 TILES_SFT,
 BOX_TILES,
 WHOLESALES_PRICE
		)
		VALUES(			    
			@PRODUCT_CODE,
			@TOTAL_STOCK_AMOUNT,
			@PURCHASED_PRICE,
			@OPENING_STOCK_QUANTITY,
			@OPENING_DATE,
			@STOCK_QUANTITY,  
			GETDATE(), 
			@MAKE_BY,
			@PRODUCT_STATUS,
			@WARRANTY_DAYS, 
			@SALES_PRICE, 
			@PURCHASE_PRICE, 
			@SERIAL_AVAILABLE, 
			@UNIT_ID, 
			@CATEGORY_ID, 
			@BRAND_ID, 
			@SUBCATEGORY_ID, 
			@PRODUCT_DESCRIPTION,
			@PRODUCT_NAME,
			@SALES_VAT,
			@RAW_MATERIALS_STATUS,
			@COMPANY_ID,
			@BRANCH_ID,
			@DISCOUNT,
			@UNIT_ID_SECONDARY,
			@BUYER_SUPPLIER_ID,
			@REORDER_LEVEL,
			@PRODUCT_IMAGE,
			@PRODUCT_SIZE_NAME ,
 @PRODUCT_COLOR_NAME, @STYLE_CODE,@DISCOUNT_STATUS,@RACK_NO,@TILES_SFT,@BOX_TILES,@WHOLESALES_PRICE
				  )
		SET @STOP_VARIABLE=@STOP_VARIABLE+1
	END
END TRY
BEGIN CATCH
	SELECT  @ERROR_MESSAGE = N'Error %d, Line %d, Message: '+ERROR_MESSAGE(),
				@ErrorNumber = ERROR_NUMBER(),
				@ErrorSeverity = ERROR_SEVERITY(),
				@ErrorState = ERROR_STATE(),
				@ErrorLine = ERROR_LINE()
	RAISERROR (@ERROR_MESSAGE, @ErrorSeverity, @ErrorState, @ErrorNumber,@ErrorLine)
END CATCH
-----------------


--UPDATE ACCOUNTS
--   SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TOTAL_STOCK_AMOUNT,
--       OPENING_BALANCE=OPENING_BALANCE+@TOTAL_STOCK_AMOUNT    
-- WHERE ACCOUNTS_CODE='9019012901901200040001'  
--   and COMPANY_ID=@COMPANY_ID

			
/*

DECLARE  @ERROR_MESSAGE nvarchar(1000) 
EXEC FSP_PRODUCT_I
'99898449',
 0,--@TOTAL_STOCK_AMOUNT decimal(18, 2),
 31000.00,--@PURCHASED_PRICE decimal(18, 2),
 0,--@OPENING_STOCK_QUANTITY int,
 GETDATE(),--@OPENING_DATE datetime,
 0,--@STOCK_QUANTITY int, 
 'RAHIMIN',--@MAKE_BY varchar(50),
 1,--@PRODUCT_STATUS int,
 0,--@WARRANTY_DAYS int, 
 10000,--@SALES_PRICE decimal(18, 2), 
 31000,--@PURCHASE_PRICE decimal(18, 2), 
 1,--@SERIAL_AVAILABLE int, 
 3,--@UNIT_ID int, 
 0,--@UNIT_ID_SECONDARY INT,
 7,--@CATEGORY_ID int, 
 14,--@BRAND_ID int, 
 12,--@SUBCATEGORY_ID int, 
 'AC 1.5ton Samsung Samsung 1.5 M-101013',
 'Samsung 1.5 M-101014',
 0,--@SALES_VAT decimal(18, 2),
 1,--@RAW_MATERIALS_STATUS int,
 1,--@COMPANY_ID varchar(10),
 --@BRANCH_ID varchar(10),
 0,--@DISCOUNT DECIMAL(18,2),
 @ERROR_MESSAGE=@ERROR_MESSAGE outPUT

*/













----------------------------------------------------






ALTER proc [dbo].[FSP_PRODUCT_U]

(
 @PRODUCT_CODE varchar(50),
 @PRODUCT_STATUS int,
 @WARRANTY_DAYS int, 
 @SALES_PRICE decimal(18, 2), 
 @PURCHASE_PRICE decimal(18, 2), 
 @SERIAL_AVAILABLE int, 
 @UNIT_ID int, 
 @UNIT_ID_SECONDARY int, 
 @CATEGORY_ID int, 
 @BRAND_ID int, 
 @SUBCATEGORY_ID int, 
 @COMPANY_ID VARCHAR (10),
 @PRODUCT_DESCRIPTION varchar(350),
 @PRODUCT_NAME varchar(250),
 @SALES_VAT decimal(18, 2),
 @RAW_MATERIALS_STATUS int,
 @DISCOUNT DECIMAL(18,2),
 @BUYER_SUPPLIER_ID nvarchar(30),
 @REORDER_LEVEL DECIMAL(18,3),
 @PRODUCT_IMAGE	image,
 @PRODUCT_SIZE_NAME varchar(350),
 @PRODUCT_COLOR_NAME varchar(350),
 @STYLE_CODE varchar(350),
@DISCOUNT_STATUS int,
@RACK_NO varchar(350),
 @TILES_SFT DECIMAL(18,2),
 @BOX_TILES DECIMAL(18,2),
 @WHOLESALES_PRICE DECIMAL(18,2),
 @STOCK_QUANTITY DECIMAL(18,2)
)
AS

UPDATE PRODUCT
   SET PRODUCT_NAME = @PRODUCT_NAME
      ,PRODUCT_DESCRIPTION = @PRODUCT_DESCRIPTION
      ,SUBCATEGORY_ID = @SUBCATEGORY_ID
      ,BRAND_ID = @BRAND_ID
      ,CATEGORY_ID = @CATEGORY_ID
      ,UNIT_ID = @UNIT_ID
      ,UNIT_ID_SECONDARY = @UNIT_ID_SECONDARY
      ,SERIAL_AVAILABLE = @SERIAL_AVAILABLE
      ,PURCHASE_PRICE = @PURCHASE_PRICE
      ,SALES_PRICE = @SALES_PRICE
      ,WARRANTY_DAYS = @WARRANTY_DAYS
      --,COMPANY_ID=@COMPANY_ID
      ,PRODUCT_STATUS = @PRODUCT_STATUS 
      ,SALES_VAT = @SALES_VAT
      ,RAW_MATERIALS_STATUS=@RAW_MATERIALS_STATUS
      ,DISCOUNT=@DISCOUNT
      ,BUYER_SUPPLIER_ID=@BUYER_SUPPLIER_ID
      ,REORDER_LEVEL=@REORDER_LEVEL
      ,PRODUCT_IMAGE=@PRODUCT_IMAGE
      ,PRODUCT_SIZE_NAME= @PRODUCT_SIZE_NAME ,
 PRODUCT_COLOR_NAME = @PRODUCT_COLOR_NAME,
 STYLE_CODE=@STYLE_CODE, DISCOUNT_STATUS =@DISCOUNT_STATUS,RACK_NO=@RACK_NO
 ,TILES_SFT=@TILES_SFT,BOX_TILES=@BOX_TILES,WHOLESALES_PRICE=@WHOLESALES_PRICE
 WHERE PRODUCT_CODE=@PRODUCT_CODE and COMPANY_ID=@COMPANY_ID
 
 
  
 DECLARE @PRODUCT_QUANTITY decimal(18, 2)
	SET @PRODUCT_QUANTITY =(SELECT STOCK_QUANTITY FROM PRODUCT WHERE PRODUCT_CODE=@PRODUCT_CODE and COMPANY_ID=@COMPANY_ID) 
 DECLARE @PRODUCT_OPENING_QUANTITY decimal(18, 2)
	SET @PRODUCT_OPENING_QUANTITY =(SELECT OPENING_STOCK_QUANTITY FROM PRODUCT WHERE PRODUCT_CODE=@PRODUCT_CODE and COMPANY_ID=@COMPANY_ID) 
 IF(@PRODUCT_QUANTITY=0 AND @PRODUCT_OPENING_QUANTITY=0)
 BEGIN
 UPDATE PRODUCT
 SET
 PURCHASED_PRICE = @PURCHASE_PRICE,
 STOCK_QUANTITY = @STOCK_QUANTITY,
 OPENING_STOCK_QUANTITY= @STOCK_QUANTITY,
 TOTAL_STOCK_AMOUNT = (@PURCHASE_PRICE*@STOCK_QUANTITY),
 OPENING_STOCK_AMOUNT = (@PURCHASE_PRICE*@STOCK_QUANTITY)
 WHERE PRODUCT_CODE=@PRODUCT_CODE and COMPANY_ID=@COMPANY_ID
 END
 



