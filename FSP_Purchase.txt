
ALTER PROC [dbo].[FSP_PRODUCT_PURCHASE]
@PURCHASE_INVOICE_NO NVARCHAR(30),
@SUPPLIER_ID NVARCHAR(30),
@TOTAL_AMOUNT DECIMAL(18,2),
@PAID_AMOUNT DECIMAL(18,2),
@COMPANY_ID NVARCHAR(30),
@PREVIOUS_DUES DECIMAL(18,2), 
@MAKE_BY NVARCHAR(30),
@MAKE_DT DATETIME,
@REMARKS NVARCHAR(200),
@ERROR_MSG nvarchar(1000) output,
@BRANCH_ID NVARCHAR(30),
@TOTAL_DISCOUNT DECIMAL(18,2),
@EDIT_NUMBER int
AS
--------------------------------
DECLARE @AMOUNT_DEBIT DECIMAL (18,2);
DECLARE @AMOUNT_CREDIT DECIMAL (18,2);
DECLARE @TRACER_NO INT	

--//1	LP	PURCHASE NO. PRIFIX
--//2	PM	PAYMENT NO
--//3	SO	SALES NO
--//4	INV	INVOICE
--//5	CL	COLLECTION NO
--//6	PR	PURCHASE RETURN
--//7	SR	SALES RETURN 
DECLARE @VOUCHER_NO     			NVARCHAR(30) 
DECLARE @COLLECTION_NO     			NVARCHAR(30) 
EXEC FSP_GET_VOUCHER_NO @COMPANY_ID,@BRANCH_ID,5 ,2,@VOUCHER_NO=@VOUCHER_NO OUTPUT
EXEC FSP_GET_ORDER_NO_PREFIX @COMPANY_ID,@BRANCH_ID ,5 ,2,@ORDER_NO=@COLLECTION_NO OUTPUT	
--------------------------------
INSERT INTO PURCHASE(
PURCHASE_INVOICE_NO,
SUPPLIER_ID,
TOTAL_AMOUNT,
PAID_AMOUNT,
COMPANY_ID,
PREVIOUS_DUES, 
MAKE_BY,
MAKE_DT,
REMARKS,
BRANCH_ID,
TOTAL_DISCOUNT,
EDIT_NUMBER
)
VALUES(@PURCHASE_INVOICE_NO,
@SUPPLIER_ID,
@TOTAL_AMOUNT,
@PAID_AMOUNT,
@COMPANY_ID,
@PREVIOUS_DUES, 
@MAKE_BY,
@MAKE_DT,
@REMARKS,
@BRANCH_ID,
@TOTAL_DISCOUNT,
@EDIT_NUMBER
)


declare @amount_debit_NEW_AMOUNT decimal (18,2);
declare @amount_credit_NEW_AMOUNT decimal (18,2);

IF @SUPPLIER_ID=1
	BEGIN
		
		SET @AMOUNT_DEBIT=(SELECT ACCOUNTS_BALANCE 
								FROM ACCOUNTS	
								WHERE ACCOUNTS_CODE='9069061906906100010001' 
								AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
								)+@TOTAL_AMOUNT
								
		
                   set @amount_debit_NEW_AMOUNT=@TOTAL_AMOUNT+ISNULL((SELECT TOP 1 [NEW_AMOUNT] FROM [ACCOUNT_LEDGER] 
                   where ACCOUNT_ID='9069061906906100010001'  and MAKE_DATE<@MAKE_DT 
                   ORDER BY  MAKE_DATE DESC ),0);
						
								
								
								
		--CREDIT ACCOUNT PRETTY CASH                      
		SET @AMOUNT_CREDIT=(SELECT ACCOUNTS_BALANCE 
								FROM ACCOUNTS 
								WHERE ACCOUNTS_CODE='9019012901901200020001'
								AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
						     )-@TOTAL_AMOUNT;
		
		
		
                    set @amount_credit_NEW_AMOUNT=ISNULL((SELECT TOP 1 [NEW_AMOUNT] FROM [ACCOUNT_LEDGER] 
                    where ACCOUNT_ID='9019012901901200020001'  
                    and MAKE_DATE<@MAKE_DT ORDER BY  MAKE_DATE DESC),0)- @TOTAL_AMOUNT ; 

		
		
		
		EXEC FSP_GET_TRACER_NO @COMPANY_ID,@BRANCH_ID,'TRACER_NO','',@TRACER_NO=@TRACER_NO OUTPUT 
		INSERT INTO ACCOUNT_LEDGER(VOUCHER_NO,TRACER_NO,TRANSACTION_TYPE,PURCHASE_INVOICE_NO,ACCOUNT_ID,DATE,LEDGER_DEBIT,LEDGER_CREDIT,NEW_AMOUNT,COMPANY_ID,MAKE_BY,MAKE_DATE,NOTE,SYSTEM_GENERATION_FLAG,BRANCH_ID) 
		VALUES(@VOUCHER_NO,@TRACER_NO,'D',@PURCHASE_INVOICE_NO,'9069061906906100010001',@MAKE_DT,@TOTAL_AMOUNT,'0.00',@amount_debit_NEW_AMOUNT,@COMPANY_ID,@MAKE_BY,@MAKE_DT,'LOCAL PURCHASE BY CASH','S',@BRANCH_ID)

		UPDATE ACCOUNT_LEDGER SET NEW_AMOUNT = @TOTAL_AMOUNT+NEW_AMOUNT 
		WHERE MAKE_DATE>@MAKE_DT and ACCOUNT_ID = '9069061906906100010001'
		
		
		EXEC FSP_GET_TRACER_NO @COMPANY_ID,@BRANCH_ID,'TRACER_NO','',@TRACER_NO=@TRACER_NO OUTPUT
		INSERT INTO ACCOUNT_LEDGER(VOUCHER_NO,TRACER_NO,TRANSACTION_TYPE,PURCHASE_INVOICE_NO,ACCOUNT_ID,BUYER_SUPPLIER_ID,DATE,LEDGER_DEBIT,LEDGER_CREDIT,NEW_AMOUNT,COMPANY_ID,MAKE_BY,MAKE_DATE,NOTE,SYSTEM_GENERATION_FLAG,BRANCH_ID) 
		VALUES(@VOUCHER_NO,@TRACER_NO,'C',@PURCHASE_INVOICE_NO,'9019012901901200020001',@SUPPLIER_ID,@MAKE_DT,'0.00',@TOTAL_AMOUNT,@amount_credit_NEW_AMOUNT,@COMPANY_ID,@MAKE_BY,@MAKE_DT,'LOCAL PURCHASE BY CASH','S',@BRANCH_ID)
		
		
		UPDATE ACCOUNT_LEDGER SET NEW_AMOUNT = NEW_AMOUNT-@TOTAL_AMOUNT
		 WHERE MAKE_DATE>@MAKE_DT and ACCOUNT_ID = '9019012901901200020001'

		
		
		
		--ACCOUNT TABLE ER PURCHASE BALANCE UPDATE
		UPDATE ACCOUNTS SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TOTAL_AMOUNT    
		WHERE ACCOUNTS_CODE= '9069061906906100010001' 
		AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
		
		--ACCOUNT TABLE ER PRETTY CASH BALANCE UPDATE
		UPDATE ACCOUNTS SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE-@TOTAL_AMOUNT    
		WHERE ACCOUNTS_CODE= '9019012901901200020001' 
		AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID

	END
ELSE
	BEGIN
	    --DEBIT ACCOUNT PURCHASE  
		SET @AMOUNT_DEBIT=(SELECT ACCOUNTS_BALANCE 
								FROM ACCOUNTS 
								WHERE ACCOUNTS_CODE='9069061906906100010001' 
								AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
						   )+@TOTAL_AMOUNT;
						   
						   
		 set @amount_debit_NEW_AMOUNT=@TOTAL_AMOUNT+ISNULL((SELECT TOP 1 [NEW_AMOUNT] FROM [ACCOUNT_LEDGER] 
                   where ACCOUNT_ID='9069061906906100010001'  and MAKE_DATE<@MAKE_DT 
                   ORDER BY  MAKE_DATE DESC ),0);				   
						   
		
		--CREDIT ACCOUNT PAYABLE               
		SET @AMOUNT_CREDIT=(SELECT ACCOUNTS_BALANCE 
								FROM ACCOUNTS 
								WHERE ACCOUNTS_CODE='9029022902902200020001'  
								AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
							)+@TOTAL_AMOUNT;
							
			
                    set @amount_credit_NEW_AMOUNT=ISNULL((SELECT TOP 1 [NEW_AMOUNT] FROM [ACCOUNT_LEDGER] 
                    where ACCOUNT_ID='9029022902902200020001'  
                    and MAKE_DATE<@MAKE_DT ORDER BY  MAKE_DATE DESC),0)+ @TOTAL_AMOUNT ; 				
							
	
		
		EXEC FSP_GET_TRACER_NO @COMPANY_ID,@BRANCH_ID,'TRACER_NO','',@TRACER_NO=@TRACER_NO OUTPUT
		INSERT INTO ACCOUNT_LEDGER(VOUCHER_NO,TRACER_NO,TRANSACTION_TYPE,PURCHASE_INVOICE_NO,ACCOUNT_ID,DATE,LEDGER_DEBIT,LEDGER_CREDIT,NEW_AMOUNT,COMPANY_ID,MAKE_BY,MAKE_DATE,NOTE,SYSTEM_GENERATION_FLAG,BRANCH_ID) 
		VALUES(@VOUCHER_NO,@TRACER_NO,'D',@PURCHASE_INVOICE_NO,'9069061906906100010001',@MAKE_DT,@TOTAL_AMOUNT,'0.00',@amount_debit_NEW_AMOUNT,@COMPANY_ID,@MAKE_BY,@MAKE_DT,'LOCAL PURCHASE BY CASH','S',@BRANCH_ID)
	
		
		UPDATE ACCOUNT_LEDGER SET NEW_AMOUNT = @TOTAL_AMOUNT+NEW_AMOUNT 
		WHERE MAKE_DATE>@MAKE_DT and ACCOUNT_ID = '9069061906906100010001'
		
		
		EXEC FSP_GET_TRACER_NO @COMPANY_ID,@BRANCH_ID,'TRACER_NO','',@TRACER_NO=@TRACER_NO OUTPUT
		INSERT INTO ACCOUNT_LEDGER(VOUCHER_NO,TRACER_NO,TRANSACTION_TYPE,PURCHASE_INVOICE_NO,ACCOUNT_ID,BUYER_SUPPLIER_ID,DATE,LEDGER_DEBIT,LEDGER_CREDIT,NEW_AMOUNT,COMPANY_ID,MAKE_BY,MAKE_DATE,NOTE,SYSTEM_GENERATION_FLAG,BRANCH_ID) 
		VALUES(@VOUCHER_NO,@TRACER_NO,'C',@PURCHASE_INVOICE_NO,'9029022902902200020001',@SUPPLIER_ID,@MAKE_DT,'0.00',@TOTAL_AMOUNT,@amount_credit_NEW_AMOUNT,@COMPANY_ID,@MAKE_BY,@MAKE_DT,'LOCAL PURCHASE BY BUYER','S',@BRANCH_ID)

		UPDATE ACCOUNT_LEDGER SET NEW_AMOUNT = NEW_AMOUNT+@TOTAL_AMOUNT
		 WHERE MAKE_DATE>@MAKE_DT and ACCOUNT_ID = '9029022902902200020001'



		--ACCOUNT TABLE ER ACCOUNT PAYBALE  BALANCE UPDATE
		UPDATE ACCOUNTS SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TOTAL_AMOUNT    
		WHERE ACCOUNTS_CODE= '9029022902902200020001' 
		AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID	 

		--ACCOUNT TABLE ER PURCHASE BALANCE UPDATE
		UPDATE ACCOUNTS SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TOTAL_AMOUNT    
		WHERE ACCOUNTS_CODE= '9069061906906100010001' 
		AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID
		
		--BUYER_SUPPLIER_INFO TABLE ER SUPPLIER ER  BS_ACCOUNT_BALANCE  BALANCE UPDATE
		UPDATE BUYER_SUPPLIER_INFO SET BS_ACCOUNT_BALANCE =BS_ACCOUNT_BALANCE-@TOTAL_AMOUNT   
		WHERE BUYER_SUPPLIER_ID =@SUPPLIER_ID
		AND COMPANY_ID=@COMPANY_ID --AND BRANCH_ID=@BRANCH_ID

	END
	
--ACCOUNT TABLE ER CURRENT STOCK BALANCE UPDATE                   
UPDATE ACCOUNTS SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TOTAL_AMOUNT
WHERE ACCOUNTS_CODE= '9019012901901200040001' 
AND COMPANY_ID=@COMPANY_ID AND BRANCH_ID=@BRANCH_ID;
----------------------------------------------------------






===========================================================================================================================================

-- exec [FSP_CANCEL_PURCHASE] 'LP-DSL-HO-2019-000097','sd','1','1',''
ALTER PROC [dbo].[FSP_CANCEL_PURCHASE_FOR_EDIT]
(
@PURCHASE_INVOICE_NO NVARCHAR(30),
@CANCEL_BY NVARCHAR(30),
@COMPANY_ID NVARCHAR(10),
@BRANCH_ID nvarchar(10),
@ERROR_MESSAGE nvarchar(1000) OUTPUT
)

AS
BEGIN
	-----------------------VOUCHER REVERSE OR CANCEL-----------------------------
	--//1	LP	PURCHASE NO. PRIFIX
	--//2	PM	PAYMENT NO
	--//3	SO	SALES NO
	--//4	INV	INVOICE
	--//5	CL	COLLECTION NO
	--//6	PR	PURCHASE RETURN
	--//7	SR	SALES RETURN 
    DECLARE @VOUCHER_NO     			NVARCHAR(30) 
    EXEC FSP_GET_VOUCHER_NO @COMPANY_ID,@BRANCH_ID ,1 ,2,@VOUCHER_NO=@VOUCHER_NO OUTPUT
    
    
	DECLARE @LEDGER_ID					BIGINT
	DECLARE @VOUCHER_NO_TABLE			NVARCHAR(30) 
	DECLARE @VOUCHER_NO_OLD				NVARCHAR(30) 
	DECLARE @PURCHASE_INVOICE_NO_TABLE	NVARCHAR(50) 
	DECLARE @SALES_INVOICE_NO			NVARCHAR(50) 
	DECLARE @COLLECTION_NO				NVARCHAR(50) 
	DECLARE @PAYMENT_NO					NVARCHAR(50) 
	DECLARE @ACCOUNT_ID					NVARCHAR(30) 
	DECLARE @BUYER_SUPPLIER_ID			INT 
	DECLARE @DATE						DATETIME 
	DECLARE @TRANSACTION_TYPE			CHAR(1) 
	DECLARE @LEDGER_DEBIT				DECIMAL(18,2) 
	DECLARE @LEDGER_CREDIT				DECIMAL(18,2) 
	DECLARE @NEW_AMOUNT					DECIMAL(18,2) 
	DECLARE @STOCK_AMOUNT				DECIMAL(18,2) 	
	DECLARE @COMPANY_ID_TABLE			INT 
	DECLARE @MAKE_BY					NCHAR(50) 
	DECLARE @MAKE_DATE					DATETIME 
	DECLARE @NOTE						NVARCHAR(50) 
	DECLARE @SYSTEM_GENERATION_FLAG		NVARCHAR(5) 
	DECLARE @AUTHORIZE_STATUS			CHAR(1)
	DECLARE @BALANCE_TYPE				NVARCHAR(10) 
	DECLARE @ACCOUNT_BALANCE			DECIMAL(18,2) 
	DECLARE @TRANSACTION_AMOUNT			DECIMAL(18,2) 
	DECLARE @DR_CR						CHAR(1)
	DECLARE @ORIGINAL_VOUCHER_NO		NVARCHAR(30) 
	
	DECLARE @COUNT_REVERSE_TRANS        INT
	
	DECLARE @TRACER_NO INT 
	DECLARE @ORIGINAL_TRACER_NO INT 
	DECLARE @TRACER_NO_OLD INT 
	
	DECLARE @STOCK_TRANSFER_INVOICE_NO nvarchar(50)
	DECLARE @BRANCH_ID_TABLE			INT 
	---
	SELECT @COUNT_REVERSE_TRANS=COUNT(*),@VOUCHER_NO_OLD=VOUCHER_NO  
	FROM   ACCOUNT_LEDGER L 
	WHERE  L.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and L.COMPANY_ID=@COMPANY_ID  and L.BRANCH_ID=@BRANCH_ID
	and L.PURCHASE_INVOICE_NO is not null AND @PURCHASE_INVOICE_NO IS NOT NULL	
	GROUP BY VOUCHER_NO
	
	IF @COUNT_REVERSE_TRANS=0
	BEGIN
		SET @ERROR_MESSAGE='No purchase found for cancel!!'
		GOTO TERMINATE
	END
	---
	SELECT @COUNT_REVERSE_TRANS=COUNT(*)    
	FROM   ACCOUNT_LEDGER L INNER JOIN ACCOUNT_LEDGER R ON L.VOUCHER_NO = R.ORIGINAL_VOUCHER_NO 
	and L.COMPANY_ID=R.COMPANY_ID AND L.BRANCH_ID=R.BRANCH_ID 
	WHERE  L.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO 
	and L.COMPANY_ID=@COMPANY_ID and L.BRANCH_ID=@BRANCH_ID
	and L.PURCHASE_INVOICE_NO is not null AND @PURCHASE_INVOICE_NO IS NOT NULL	
	
	--IF @COUNT_REVERSE_TRANS>0
	--BEGIN
	--	SET @ERROR_MESSAGE='This purchase already has been canceld!!'
	--	GOTO TERMINATE
	--END
	---
	
	DECLARE LEDGER_CURSOR CURSOR
	FOR SELECT L.*,UPPER(RTRIM(A.BALANCE_TYPE)),CASE WHEN L.TRANSACTION_TYPE='C' THEN 'D' ELSE 'C' END 
		FROM ACCOUNT_LEDGER L INNER JOIN ACCOUNTS A ON L.ACCOUNT_ID = A.ACCOUNTS_CODE 
		and L.COMPANY_ID=A.COMPANY_ID  AND L.BRANCH_ID=A.BRANCH_ID
		WHERE L.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and L.COMPANY_ID=@COMPANY_ID and L.VOUCHER_NO=@VOUCHER_NO_OLD
		and L.BRANCH_ID=@BRANCH_ID
	
	BEGIN TRY
	OPEN LEDGER_CURSOR
	FETCH NEXT FROM LEDGER_CURSOR
	INTO @VOUCHER_NO_TABLE,@TRACER_NO_OLD,@PURCHASE_INVOICE_NO_TABLE,@SALES_INVOICE_NO,
	  @COLLECTION_NO,@PAYMENT_NO,@STOCK_TRANSFER_INVOICE_NO,@ACCOUNT_ID,@BUYER_SUPPLIER_ID,@DATE,
	  @TRANSACTION_TYPE,@LEDGER_DEBIT,@LEDGER_CREDIT,@NEW_AMOUNT,
	  @COMPANY_ID,@MAKE_BY,@MAKE_DATE,@NOTE,@SYSTEM_GENERATION_FLAG,@AUTHORIZE_STATUS,
	  @ORIGINAL_VOUCHER_NO,@ORIGINAL_TRACER_NO,@BRANCH_ID_TABLE,@BALANCE_TYPE,@DR_CR
      
	WHILE @@FETCH_STATUS=0
	BEGIN
		--PRINT(@VOUCHER_NO+'---'+@PURCHASE_INVOICE_NO_TABLE+'-'+@ACCOUNT_ID+'-'+@TRANSACTION_TYPE+'-'+@DR_CR+'-'+@BALANCE_TYPE+'-'+CAST(@LEDGER_DEBIT AS NVARCHAR(30))+'-'+CAST(@LEDGER_CREDIT AS NVARCHAR(30)))
		
		
		IF @TRANSACTION_TYPE='D' 
			SET @TRANSACTION_AMOUNT=@LEDGER_DEBIT
		ELSE 
			SET @TRANSACTION_AMOUNT=@LEDGER_CREDIT
		
		IF (@DR_CR='D' AND @BALANCE_TYPE='DEBIT') OR (@DR_CR='C' AND @BALANCE_TYPE='CREDIT')			
		BEGIN
			SET @ACCOUNT_BALANCE=(SELECT ACCOUNTS_BALANCE 
									FROM ACCOUNTS 
									WHERE ACCOUNTS_CODE=@ACCOUNT_ID  and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
								  ) + @TRANSACTION_AMOUNT 								  
			UPDATE ACCOUNTS 
			SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE+@TRANSACTION_AMOUNT 
			WHERE ACCOUNTS_CODE= @ACCOUNT_ID and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
		END
		ELSE
		BEGIN
			SET @ACCOUNT_BALANCE=(SELECT ACCOUNTS_BALANCE 
									FROM ACCOUNTS 
									WHERE ACCOUNTS_CODE=@ACCOUNT_ID and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
								  ) - @TRANSACTION_AMOUNT 								  
			UPDATE ACCOUNTS 
			SET ACCOUNTS_BALANCE =ACCOUNTS_BALANCE - @TRANSACTION_AMOUNT 
			WHERE ACCOUNTS_CODE= @ACCOUNT_ID and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
		END		
		EXEC FSP_GET_TRACER_NO @COMPANY_ID,@BRANCH_ID,'TRACER_NO','',@TRACER_NO=@TRACER_NO OUTPUT							   
		INSERT INTO ACCOUNT_LEDGER
				   (
					VOUCHER_NO,TRACER_NO,TRANSACTION_TYPE,
					PURCHASE_INVOICE_NO,SALES_INVOICE_NO,COLLECTION_NO,PAYMENT_NO,
					ACCOUNT_ID,BUYER_SUPPLIER_ID,DATE,
					LEDGER_DEBIT,LEDGER_CREDIT,NEW_AMOUNT,
					COMPANY_ID,MAKE_BY,MAKE_DATE,NOTE,SYSTEM_GENERATION_FLAG,
					ORIGINAL_VOUCHER_NO,ORIGINAL_TRACER_NO,BRANCH_ID
					)
			 VALUES(
					@VOUCHER_NO,@TRACER_NO,@DR_CR,
					@PURCHASE_INVOICE_NO,@SALES_INVOICE_NO,@COLLECTION_NO,@PAYMENT_NO,
					@ACCOUNT_ID,@BUYER_SUPPLIER_ID,GETDATE(),
					CASE WHEN @DR_CR='D' THEN @TRANSACTION_AMOUNT ELSE 0 END,
					CASE WHEN @DR_CR='C' THEN @TRANSACTION_AMOUNT ELSE 0 END,
					@ACCOUNT_BALANCE,
					@COMPANY_ID,@CANCEL_BY,GETDATE(),'Cancel : '+@NOTE,'S',
					@VOUCHER_NO_TABLE,@TRACER_NO_OLD ,@BRANCH_ID_TABLE               
					)	
		
		
		FETCH NEXT FROM LEDGER_CURSOR
		INTO @VOUCHER_NO_TABLE,@TRACER_NO_OLD,@PURCHASE_INVOICE_NO_TABLE,@SALES_INVOICE_NO,
		  @COLLECTION_NO,@PAYMENT_NO,@STOCK_TRANSFER_INVOICE_NO,@ACCOUNT_ID,@BUYER_SUPPLIER_ID,@DATE,
		  @TRANSACTION_TYPE,@LEDGER_DEBIT,@LEDGER_CREDIT,@NEW_AMOUNT,
		  @COMPANY_ID,@MAKE_BY,@MAKE_DATE,@NOTE,@SYSTEM_GENERATION_FLAG,@AUTHORIZE_STATUS,
		  @ORIGINAL_VOUCHER_NO,@ORIGINAL_TRACER_NO,@BRANCH_ID_TABLE,@BALANCE_TYPE,@DR_CR
	END
	CLOSE LEDGER_CURSOR;  
	DEALLOCATE LEDGER_CURSOR; 
	END TRY    
	BEGIN CATCH
		BEGIN TRY
			CLOSE LEDGER_CURSOR;  
		END TRY
		BEGIN CATCH
		END CATCH		
    DEALLOCATE LEDGER_CURSOR; 
    END CATCH
    -----------------------END VOUCHER REVERSE OR CANCEL--------------------------
	
	
    -----------------------OTHER REGISTER UPDATE CODE-----------------------------
    
    SELECT @COUNT_REVERSE_TRANS=COUNT(*)    
	FROM   PURCHASE L
	WHERE  L.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and L.CANCEL_FLAG=1   and L.COMPANY_ID=@COMPANY_ID and l.BRANCH_ID=@BRANCH_ID
	--IF @COUNT_REVERSE_TRANS>0
	--BEGIN
	--	SET @ERROR_MESSAGE='This purchase already has been canceld!!'
	--	GOTO TERMINATE
	--END
	
	----------------CURRENT STOCK BALANCE UPDATE---------------------------
	SELECT @STOCK_AMOUNT=P.TOTAL_AMOUNT,
		   @BUYER_SUPPLIER_ID=P.SUPPLIER_ID
	FROM PURCHASE P
	WHERE P.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and P.COMPANY_ID=@COMPANY_ID and p.BRANCH_ID=@BRANCH_ID;	  
	UPDATE ACCOUNTS
	SET ACCOUNTS_BALANCE=ACCOUNTS_BALANCE-@STOCK_AMOUNT
	WHERE ACCOUNTS_CODE='9019012901901200040001' and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID;
	-----------------------------------------------------------------------
	  
    UPDATE PURCHASE SET CANCEL_FLAG ='1',CANCELLED_BY=@CANCEL_BY,CANCELLED_DT=GETDATE() 
    WHERE PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID;
    ----
    UPDATE PURCHASED_PRODUCT_SERIAL SET IS_ACTIVE=0  
    WHERE PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID;
    ----
    BEGIN TRY
    DELETE PRODUCT_SERIAL 
    FROM PRODUCT_SERIAL P INNER JOIN PURCHASED_PRODUCT_SERIAL PDS
		ON P.PRODUCT_CODE=PDS.PRODUCT_CODE AND P.PRODUCT_SERIAL=PDS.PRODUCT_SERIAL
	WHERE PDS.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and P.COMPANY_ID=@COMPANY_ID and p.BRANCH_ID=@BRANCH_ID;    
    END TRY
    BEGIN CATCH
	  -- SET @ERROR_MESSAGE='Please cancel serial sales first!!!!'
	  -- GOTO TERMINATE
    END CATCH
    ----
    
    begin try
    UPDATE PRODUCT
    SET STOCK_QUANTITY=STOCK_QUANTITY-PD.QUANTITY,
        TOTAL_STOCK_AMOUNT=TOTAL_STOCK_AMOUNT-PD.TOTAL_PURCHASED_PRICE,
        PURCHASED_PRICE=
        case when STOCK_QUANTITY-PD.QUANTITY=0
        then 0
        else(TOTAL_STOCK_AMOUNT-PD.TOTAL_PURCHASED_PRICE)/(STOCK_QUANTITY-PD.QUANTITY)end
    FROM PRODUCT P INNER JOIN PURCHASE_DETAILS PD
			ON P.PRODUCT_CODE=PD.PRODUCT_CODE  and P.COMPANY_ID=PD.COMPANY_ID and p.BRANCH_ID=@BRANCH_ID
	WHERE   PD.PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO and P.COMPANY_ID=@COMPANY_ID and p.BRANCH_ID=@BRANCH_ID;  
	
	UPDATE BUYER_SUPPLIER_INFO
	SET BS_ACCOUNT_BALANCE = BS_ACCOUNT_BALANCE+@STOCK_AMOUNT
	WHERE BUYER_SUPPLIER_ID=@BUYER_SUPPLIER_ID AND BUYER_SUPPLIER_ID!=1 
	and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
	end try
	begin catch
	 --  SET @ERROR_MESSAGE='Please cancel sales first!!!!'
	 --  GOTO TERMINATE
	end catch
	
	
	--------------------------PAYMENT CANCEL----------------------------------------
	
	
	DECLARE @COUNT INT
    DECLARE @PAYMENT_LIST NVARCHAR(1000)
    DECLARE @PAID_AMOUNT DECIMAL(18,2)
    
    SELECT @COUNT=COUNT(*) FROM PAYMENT
    WHERE PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO AND PAYMENT_CANCEL!=1 and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID; 
    -----CHECK FOR MULTIPLE PAYMENT
   -- IF @COUNT>0
   -- BEGIN
		 --SELECT @PAYMENT_LIST=COALESCE(@PAYMENT_LIST+',','')+PAYMENT_NO
		 --FROM PAYMENT
		 --WHERE PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO AND PAYMENT_CANCEL!=1 and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID; 
		 
		 --SET @ERROR_MESSAGE='Please cancel this payment first :'+@PAYMENT_LIST
		 --GOTO TERMINATE
   -- END 
	
	
	SELECT @PAID_AMOUNT=P.PAID_AMOUNT,
		   @BUYER_SUPPLIER_ID=P.BUYER_SUPPLIER_ID,
		   @PURCHASE_INVOICE_NO=P.PURCHASE_INVOICE_NO
	FROM PAYMENT P INNER JOIN BUYER_SUPPLIER_INFO B ON P.BUYER_SUPPLIER_ID=B.BUYER_SUPPLIER_ID and P.COMPANY_ID=B.COMPANY_ID
	WHERE PURCHASE_INVOICE_NO=@PURCHASE_INVOICE_NO AND PAYMENT_CANCEL=0 and P.COMPANY_ID=@COMPANY_ID and p.BRANCH_ID=@BRANCH_ID
	
	UPDATE PAYMENT  
	SET PAYMENT_CANCEL = '1',
		CANCELLED_BY=@CANCEL_BY,
		CANCELLED_DT=GETDATE(),
		CANCEL_REASON='CANCELATION OF PAYMENT :'+@PURCHASE_INVOICE_NO,
		PAID_AMOUNT = PAID_AMOUNT-@PAID_AMOUNT
	WHERE PAYMENT_NO=@PAYMENT_NO and COMPANY_ID=@COMPANY_ID and BRANCH_ID=@BRANCH_ID
	
    -----------------------END OTHER REGISTER UPDATE CODE-------------------------
    
    
    
    -----------------------ERROR REGION------------------------------------------- 
    TERMINATE:	 
    
    -----------------------END ERROR REGION---------------------------------------  
END

================================================================================================================================================





ALTER PROC [dbo].[FSP_PRODUCT_PURCHASE_DETAILS_EDIT]
@PURCHASE_INVOICE_NO NVARCHAR(30),
@PRODUCT_CODE NVARCHAR(30),
@UNIT_ID NVARCHAR(30),
@QUANTITY NVARCHAR(30),  
@TOTAL_PURCHASED_PRICE DECIMAL(18,2),
@PURCHASED_PRICE DECIMAL(18,2),
@SERIAL_AVAILABLE NVARCHAR(30),
@COMPANY_ID NVARCHAR(30),
@BRANCH_ID NVARCHAR(30)
AS

INSERT INTO PURCHASE_DETAILS
(
PURCHASE_INVOICE_NO,
PRODUCT_CODE,
UNIT_ID,
QUANTITY, 
TOTAL_PURCHASED_PRICE,
SERIAL_AVAILABLE,
COMPANY_ID,
BRANCH_ID
)
VALUES
(
@PURCHASE_INVOICE_NO,
@PRODUCT_CODE,
@UNIT_ID,
@QUANTITY, 
@TOTAL_PURCHASED_PRICE,
@SERIAL_AVAILABLE,
@COMPANY_ID,
@BRANCH_ID
)
declare @PURCHASE_QUANTITY decimal(18,2)
declare @SALES_QUANTITY decimal(18,2)
declare @NEW_QUANTITY decimal(18,2)
declare @PURCHASE_PRICE decimal(18,2)
set @PURCHASE_PRICE = (@TOTAL_PURCHASED_PRICE/@QUANTITY)
set @SALES_QUANTITY = (

select SUM(sd.QUANTITY) from SALES s
inner join SALES_DETAILS sd on s.SALES_INVOICE_NO=sd.SALES_INVOICE_NO
and s.COMPANY_ID=sd.COMPANY_ID and s.BRANCH_ID=sd.BRANCH_ID
where PRODUCT_CODE=@PRODUCT_CODE and s.CANCEL_FLAG=0
) 

set @PURCHASE_QUANTITY = (

select SUM(sd.QUANTITY) from PURCHASE s
inner join PURCHASE_DETAILS sd on s.PURCHASE_INVOICE_NO=sd.PURCHASE_INVOICE_NO
and s.COMPANY_ID=sd.COMPANY_ID and s.BRANCH_ID=sd.BRANCH_ID
where PRODUCT_CODE=@PRODUCT_CODE and s.CANCEL_FLAG=0
) 

set @NEW_QUANTITY = (ISNULL(@PURCHASE_QUANTITY,0)- ISNULL(@SALES_QUANTITY,0))

UPDATE PRODUCT 
SET STOCK_QUANTITY =@NEW_QUANTITY,
	TOTAL_STOCK_AMOUNT=@PURCHASE_PRICE*@NEW_QUANTITY,--(@QUANTITY*),
	PURCHASED_PRICE=@PURCHASE_PRICE
	--,PURCHASE_PRICE = (@TOTAL_PURCHASED_PRICE/@QUANTITY)
WHERE PRODUCT_CODE=@PRODUCT_CODE AND BRANCH_ID=@BRANCH_ID
AND COMPANY_ID=@COMPANY_ID

--update PRODUCT_SERIAL set SALES_STATUS=1
-- where PRODUCT_SERIAL in (select PRODUCT_SERIAL
--  from 
--  SALES_PRODUCT_SERIAL)



============================================================================================================================


ALTER proc [dbo].[FSP_PRODUCT_PURCHASE_DETAILS_SERIAL]
@PURCHASE_INVOICE_NO nvarchar(50),
@PRODUCT_CODE nvarchar(30),
@PRODUCT_SERIAL nvarchar(130),
@COMPANY_ID nvarchar(30),
@BRANCH_ID NVARCHAR(30),
@PURCHASED_PRICE decimal(18,0),
@PRODUCT_SERIAL2 nvarchar(130)
as

INSERT INTO PURCHASED_PRODUCT_SERIAL(
PURCHASE_INVOICE_NO,
PRODUCT_CODE,
PRODUCT_SERIAL,
COMPANY_ID,
BRANCH_ID,
PURCHASED_PRICE) 
VALUES(
@PURCHASE_INVOICE_NO,
@PRODUCT_CODE,
@PRODUCT_SERIAL,
@COMPANY_ID,
@BRANCH_ID,
@PURCHASED_PRICE
)

INSERT INTO PRODUCT_SERIAL(
[PRODUCT_SERIAL],
[PRODUCT_CODE],
[SYS_GEN_FLAG],
[SALES_STATUS],
[COMPANY_ID],
BRANCH_ID,PURCHASED_PRICE,PRODUCT_SERIAL2)
VALUES(
@PRODUCT_SERIAL,
@PRODUCT_CODE,
'S',
0,
@COMPANY_ID,
@BRANCH_ID,@PURCHASED_PRICE,@PRODUCT_SERIAL2
)



========================================================================================================================
